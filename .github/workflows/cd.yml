name: Continuous Deployment
on:
  workflow_call:
    inputs:
      env:
        type: string
        required: true
      tag:
        type: string
        required: false
jobs:
  git-tag:
    if: ${{ inputs.tag != null }}
    name: Git Tag
    runs-on: crossmap-dev-runners-k8s
    container:
      image: images.home.mtaylor.io/deployer:0.0.9
    steps:
    - uses: actions/checkout@v4
    - name: "Configure git"
      shell: "bash"
      run: |
        git config --global user.email "githubactions@crossmap.dev"
        git config --global user.name "GitHub Actions"
        git config --global --add safe.directory $GITHUB_WORKSPACE
    - name: Git Tag
      shell: bash
      run: git tag -a ${{ inputs.tag }} -m "Release ${{ inputs.tag }}"
    - name: Git Push
      shell: bash
      run: git push origin ${{ inputs.tag }}
  argocd-deployment:
    name: ArgoCD Deployment
    runs-on: crossmap-dev-runners-k8s
    container:
      image: images.home.mtaylor.io/deployer:0.0.9
    steps:
    - uses: actions/checkout@v4
    - name: "Configure git"
      shell: "bash"
      run: |
        git config --global user.email "githubactions@crossmap.dev"
        git config --global user.name "GitHub Actions"
        git config --global --add safe.directory $GITHUB_WORKSPACE
    - name: "Checkout argocd-deployment"
      uses: "actions/checkout@v4"
      with:
        repository: "mtaylor91/argocd-deployment"
        ref: "main"
        ssh-key: ${{ secrets.ARGOCD_DEPLOYMENT_SSH_PRIVATE_KEY }}
    - name: "Update argocd-deployment"
      shell: "bash"
      run: |
        set -euxo pipefail
        path=home/namespaced/crossmap-${{ inputs.env }}
        if [ -z "${{ inputs.tag }}" ]; then
          sha=$(git rev-parse --short HEAD)
          tag=sha-${sha}
          pushd ${path}
          kustomize edit set image images.home.mtaylor.io/crossmap-api:${tag}
          popd
        else
          repo=https://github.com/crossmap-dev/api
          tag=${{ inputs.tag }}
          ./bin/update-repo-tag.sh ${path} ${repo} ${tag}
        fi
        git commit -a -m "Update crossmap-${{ inputs.env }} to ${tag}"
        git push origin main
    - name: ArgoCD Deployment
      shell: bash
      env:
        ARGOCD_SERVER: "argocd.crossmap.dev"
        ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
      run: |
        set -euxo pipefail
        argocd app sync argocd/crossmap-${{ inputs.env }} --grpc-web
        argocd app wait argocd/crossmap-${{ inputs.env }} --grpc-web --sync --health --timeout 300
